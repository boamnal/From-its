<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fromits.app.repository.FriendsRepository">

    <!--내 친구 보기 (아이디, 이름, 프로필 사진 조회)-->
    <resultMap id="friendsResult" type="com.fromits.app.dto.FriendsDto">
        <result column="user_id" property="userId" />
        <result column="name" property="name" />
        <result column="profile" property="profile" />
    </resultMap>

    <select id="getMyFriends" parameterType="String" resultMap="friendsResult">
        SELECT u.user_id as user_id, u.name as name, u.profile as profile
        FROM user u, friends f
        WHERE u.user_id = f.user_id AND u.user_id != #{userId}
    </select>


    <!-- 사용자가 입력한 텍스트를 포함하는 친구 아이디, 이름 검색 -->
    <select id="searchMyFriends" parameterType="String">
        SELECT u.user_id as user_id, u.name as name, u.profile as profile
        FROM user u, friends f
        WHERE u.user_id = f.user_id
          AND u.user_id != #{userId}
          AND (u.user_id LIKE CONCAT('%', #{searchText}, '%') OR u.name LIKE CONCAT('%', #{searchText}, '%'))
    </select>


    <!--친구 추가 로직-->

    <!-- 사용자와 친구가 아닌 모든 사용자 아이디, 이름, 프로필 검색 -->
    <select id="getOther" parameterType="String" resultMap="friendsResult">
        SELECT u.user_id as user_id, u.name as name, u.profile as profile
        FROM user u
        WHERE u.user_id NOT IN (SELECT f.user_id
                                FROM friends f
                                WHERE f.user_id = #{userId}
                                UNION
                                SELECT f.user_id2
                                FROM friends f
                                WHERE f.user_id2 = #{userId})
          AND u.user_id != #{userId};
    </select>

    <!-- 사용자가 입력한 텍스트의 친구가 아닌 사용자 아이디, 이름, 프로필 검색 -->
    <select id="searchOther" parameterType="Map" resultMap="friendsResult">
        SELECT u.user_id as userId, u.name as name, u.profile as profile
        FROM user u
        WHERE u.user_id NOT IN (SELECT CASE
                                           WHEN f.user_id = #{userId} THEN f.user_id2
                                           ELSE f.user_id
                                           END
                                FROM friends f
                                WHERE f.user_id = #{userId}
                                   OR f.user_id2 = #{userId})
          AND u.user_id != #{userId}
          AND (u.user_id LIKE CONCAT('%'
            , #{searchText}
            , '%')
           OR u.name LIKE CONCAT('%'
            , #{searchText}
            , '%'))
    </select>


    <!-- 사용자와 친구 맺기-->
    <insert id="addFriend" parameterType="String">
        INSERT INTO friends (user_id, user_id2)
        VALUES (#{userId}, #{userId2}),
               (#{userId2}, #{userId})
    </insert>


    <delete id="delete" parameterType="String">
        DELETE
        FROM friends
        WHERE userId = #{user_id}
    </delete>


</mapper>