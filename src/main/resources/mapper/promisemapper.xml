<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fromits.app.repository.PromiseRepository">
    <insert id="insert" parameterType="PromiseDto" useGeneratedKeys="true"
            keyProperty="proId">
        insert into promise(group_id, pro_name, pro_desc, pro_lat, pro_lon, pro_date, candidate_id) values(#{groupId}, #{proName},#{proDesc}, #{proLat}, #{proLon}, NOW(), null);
    </insert>

    <select id = "getPromise" parameterType="devoteCandidateDto">
        SELECT * from devote_candidate d join (SELECT candidate_id from promise
                                               where group_id = (SELECT group_id FROM group_member
                                                                 where user_id= #{param1})) b on (d.candidate_id = b.candidate_id)
    </select>

    <select id = "getPromises" parameterType="PromiseDto">
        SELECT * from promise
        where group_id = (SELECT group_id FROM group_member
                          where user_id=#{param})
    </select>

    <select id="getCount" resultType="Integer">
        SELECT count(user_id)
        FROM group_member
        WHERE group_id = (
            SELECT group_id
            FROM promise
            WHERE pro_id = (
                SELECT pro_id
                FROM devote
                WHERE devote_id = #{param1}
            )
        )
          AND user_id NOT IN (
            SELECT DISTINCT user_id
            FROM devote_candidate
            WHERE devote_id = #{param1}
        );
    </select>
</mapper>